#
euroknn <- knn(eurograf, vids = V(eurograf), weights=NULL)
#
# 10 - Calcula a distribui??o do Grau
#
eurodegdist <- degree_distribution(eurograf,mode="all",
cumulative=FALSE)
#
# 11 - Calcula o Grau
#
eurograu <- degree(eurograf, mode = "all")
eurotabela = cbind.data.frame(eurograu, knn=euroknn$knn)
eurotabela2 = cbind.data.frame(grau=1:10, knnk=euroknn$knnk)
eurotabela2$knnk[is.nan(eurotabela2$knnk)] <- 0
#
# 13 - Plotando com ggplot
#
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5))
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Corr"))+
scale_colour_manual("",
breaks = c("Coef. Corr", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))# +
europlot
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))# +
europlot
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))# +
europlot
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))# +
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))# +
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
eurotabela2$knnk[is.nan(eurotabela2$knnk)] <- 0
eurotabela2$knnk
eurotabela2 = cbind.data.frame(grau=1:10, knnk=euroknn$knnk)
eurotabela2 = cbind.data.frame(grau=1:length(euroknn$knnk), knnk=euroknn$knnk)
eurotabela2
eurotabela2$knnk = eurotabela2$knnk[!is.na(eurotabela2$knnk)];
eurotabela2 = cbind.data.frame(grau=1:length(euroknn$knnk), knnk=euroknn$knnk)
eurotabela2$knnk = eurotabela2$knnk[!is.na(eurotabela2$knnk)];
subset(eurotabela2$knnk, !is.nan(eurotabela2$knnk))
eurotabela = cbind.data.frame(eurograu, knn=euroknn$knn)
eurotabela2 = cbind.data.frame(grau=1:length(euroknn$knnk), knnk=euroknn$knnk)
subset(eurotabela2$knnk, !is.nan(eurotabela2$knnk))
europlot <- ggplot(eurotabela, aes(x = eurograu)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Euro Road - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
europlot + geom_line(data=eurotabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
library(igraph)
library(ggplot2)
library(scales)
#
# Limpa workspace e variaveis
#
ls()
rm(list=ls())
graphics.off()
#setwd("~/Documents/projetos/mecai-usp/Sistemas Complex I/Trabalho II")
#
# 1 - Leitura da Rede
#
str = 'bases/cortical-macaco'
crtmnet <- read.table(paste(str,'.txt', sep = ''))
#
# 2 - Caso tenha mais de 2 colunas a terceira ser? removida
#
if(dim(crtmnet)[2] > 2){
crtmnet[,3] = NULL
}
crtmnet = as.matrix(crtmnet)
if(min(crtmnet) == 0){
crtmnet = crtmnet + 1
}
#
# 3 - Gera??o do Gr?fico
#
crtmgraf <- graph.data.frame(crtmnet, directed=FALSE)
crtmgraf = graph_from_edgelist(crtmnet, directed = FALSE)
#
# 5 - Extra??o do maior componente da rede
#
giant.component <- function(graph) {
cl <- clusters(graph)
induced.subgraph(graph, which(cl$membership == which.max(cl$csize)))
}
crtmgraf <- giant.component(crtmgraf)
clu <- components(crtmgraf)
crtmgraf = as.undirected(crtmgraf)
crtmgraf = simplify(crtmgraf)
#
# 7 - Calcula Assortatividade
#
assortativity(crtmgraf, types1 = V(crtmgraf), directed = FALSE)
#
# 8 - Calcula Assortatividade (Grau Médio)
#
assortativity_degree(crtmgraf, directed = FALSE)
#
# 9 - Calcula o knn do grafo
#
crtmknn <- knn(crtmgraf, vids = V(crtmgraf), weights=NULL)
#
# 10 - Calcula a distribuição do Grau
#
crtmdegdist <- degree_distribution(crtmgraf,mode="all",
cumulative=FALSE)
#
# 11 - Calcula o Grau
#
crtmgrau <- degree(crtmgraf, mode = "all")
#
# 12 - Criando uma tabela para plotar no ggplot
#
crtmtabela = cbind.data.frame(crtmgrau, knn=crtmknn$knn)
crtmtabela2 = cbind.data.frame(grau=1:length(crtmknn$knnk), knnk=crtmknn$knnk)
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmtabela2$knnk[is.nan(crtmtabela2$knnk)] <- 0
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmtabela = cbind.data.frame(crtmgrau, knn=crtmknn$knn)
crtmtabela2 = cbind.data.frame(grau=1:length(crtmknn$knnk), knnk=crtmknn$knnk)
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
#
# 13 - Plotando com ggplot
#
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmtabela = cbind.data.frame(crtmgrau, knn=crtmknn$knn)
crtmtabela2 = cbind.data.frame(grau=1:length(crtmknn$knnk), knnk=crtmknn$knnk)
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
#
# 13 - Plotando com ggplot
#
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmtabela = cbind.data.frame(crtmgrau, knn=crtmknn$knn)
crtmtabela2 = cbind.data.frame(grau=1:length(crtmknn$knnk), knnk=crtmknn$knnk)
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c(" knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmtabela = cbind.data.frame(crtmgrau, knn=crtmknn$knn)
crtmtabela2 = cbind.data.frame(grau=1:length(crtmknn$knnk), knnk=crtmknn$knnk)
subset(crtmtabela2$knnk, !is.nan(crtmtabela2$knnk))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("knn(k)", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Coef. Correlação", "Grau(k) vs Knn(k)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Knn(k)", "K(vértice) vs Knn(vértice)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Knn(k)", "K(vértice) vs Knn(vértice)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Knn(k)", "K(vértice) vs Knn(vértice)"),
values = c("red", "blue"))
crtmplot <- ggplot(crtmtabela, aes(x = crtmgrau)) +
geom_point(aes(y = knn, colour="Grau(k) vs Knn(k)")) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
theme_bw()+
labs(x="Grau") +
labs(y="Média dos graus do vértice K") +
ggtitle("Cortical Macaco - Grau(k) x Knn(k)") +
theme(plot.title = element_text(hjust = 0.5), legend.justification = "top")
crtmplot + geom_line(data=crtmtabela2,
aes(x=grau,
y=knnk, colour="Coef. Correlação"))+
scale_colour_manual("",
breaks = c("Knn(k)", "K(vértice) vs Knn(vértice)"),
values = c("red", "blue"))
